// Borrowed from https://github.com/bitmanic/rem/blob/master/stylesheets/_rem.sass
/***********
 *
 * Sample input:
 *
 * .element {
 *   @include rem(padding, 10px 0 2px 5px);
 *   @include rem(border-bottom, 1px solid #000000);
 * }
 *
 *
 * Sample output:
 *
 * .element {
 *   padding: 10px 0 2px 5px;
 *   padding: 1rem 0 0.2rem 0.5rem;
 * }
 *
 ************/

// Baseline, measured in pixels
$baseline-px: $em-base;

@mixin rem($property, $px-values) {
  // Convert the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;

  // Print the first line in pixel values
  #{$property}: $px-values;

  // If there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    #{$property}: $px-values / $baseline-rem;
  }

  @else {
    // Create an empty list that we can dump values into
    $rem-values: ();

    @each $value in $px-values {
      // If the value is zero or not a number, return it
      @if $value == 0 or type-of( $value ) != "number" {
        $rem-values: append($rem-values, $value); }
      @else {
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }

    // Return the property and its list of converted values
    #{$property}: $rem-values;
  }
}
