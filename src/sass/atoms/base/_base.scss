//////////////////////////////
// Base Atom

// @import "mixins";
@import "extends";
//////////////////////////////

@mixin cola-base {

  html {
    @extend %base--html;
  }

  body {
    @extend %base--body;
  }

  * {
    -webkit-tap-highlight-color:rgba(0,0,0,0);
  }

  .ui-btn-active {
    color: transparent !important;
    background: none !important;
    background-color: transparent !important;
    background-image: none;
    text-shadow: 0/*{a-bup-shadow-x}*/
    0/*{a-bup-shadow-y}*/
    0/*{a-bup-shadow-radius}*/
    transparent/*{a-bup-shadow-color}*/;
  }

  /**
  * $FILTER-TIPS
  */
  .filter-wrapper {
    background-color: #fff;
  }

  /**
  * $PASSWORD-CONFIRM
  */
  div.password-indicator,
  div.password-confirm {
    margin-top: 0;
  }

  div.password-indicator {
    margin-bottom: 0.4em;
  }

  /**
  * $PASSWORD-INDICATOR
  */
  .password-indicator {
    height: 0.8em;
    background: none;
    border: 1px solid $light-grey;

    .indicator {
      background: $red;
    }
  }

  .password-strength-title {
    margin-bottom: 0.2em;
  }

  /**
  * $SEARCH-FORM
  */
  .search-block-form {
    .form-text {
      width: auto;
      padding: 0.4em;
    }
  }

  /**
  * Classes
  */

  a.deep-link {
    @extend %base--deeplink;
  }

  .lowercase {
    @extend %lowercase;
  }

  .small-text {
    font-size: xx-small;
  }

  .font-light {
    @extend %font-light;
  }

  .google-conversion-frame {
    display: none;
  }

  //////////////////////////////
  // Drupal Atoms reconstructed in SCSS
  /*
  * From modules/system/system.base.css
  */

  /*
  * Hide elements from all users.
  *
  * Used for elements which should not be immediately displayed to any user. An
  * example would be a collapsible fieldset that will be expanded with a click
  * from a user. The effect of this class can be toggled with the jQuery show()
  * and hide() functions.
  */
  .element-hidden {
    @extend %element-hidden;
  }

  /*
  * Hide elements visually, but keep them available for screen-readers.
  *
  * Used for information required for screen-reader users to understand and use
  * the site where visual display is undesirable. Information provided in this
  * manner should be kept concise, to avoid unnecessary burden on the user.
  * "!important" is used to prevent unintentional overrides.
  */
  .element-invisible {
    @extend %element-invisible;
  }

  /*
  * The .element-focusable class extends the .element-invisible class to allow
  * the element to be focusable when navigated to via the keyboard.
  */
  .element-invisible.element-focusable:active,
  .element-invisible.element-focusable:focus {
    @extend %element-focusable;
  }

  /*
  * Prevent text wrapping.
  */
  .nowrap {
    white-space: nowrap;
  }

  /**
  * Inline items.
  */
  .container-inline {
    div,
    label {
      display: inline;
    }
    .fieldset-wrapper {
      display: block;
    }
  }

  /**
  * Markup free clearing.
  *
  * @see http://perishablepress.com/press/2009/12/06/new-clearfix-hack
  */
  .clearfix:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
  }
  /* IE6 */
  * html .clearfix {
    height: 1%;
  }
  /* IE7 */
  *:first-child + html .clearfix {
    min-height: 1%;
  }

  //////////////////////////////

  #_evh-ric {
    div {
      padding-right: 100px;
    }
    p {
      margin: 0px 0px 10px;
    }
  }

  .br-point {
    display: block;
    white-space: pre;
  }

}
